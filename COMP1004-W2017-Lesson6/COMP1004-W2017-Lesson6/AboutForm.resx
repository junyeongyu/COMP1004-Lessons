<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH0AAAA4CAIAAABfd2CtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAABc+SURBVHhe7dx52FfjugdwJ4lIKFNEROYiUqkMRZNKpjI0
        aTCUIWVIZQzZoZQ2h0LmmVJUJKnU2zbtfQztTYQ2jl3ss/cxXNe5znUd5/Nb9/qt9/dOetOrbe+r7x/r
        WutZz3rW83zv+/7e9/N7V22yERuxERuxERtRKfxbHun1RmwA1KxZc4cddthzzz3r16+/7bbbbrbZZtWr
        V69WrVp6eyN+IdSpU2e//fY76qijunfv3q9fv7POOuukk05q1qxZrVq1GGDTTTfdGAdVAO685ZZb1q5d
        u27dujvvvDMfb9y48THHHHPyyScj/eKLL77++uvHjx8/YcKEW2+99dxzz23Tps3WW2/NAFtssYWnttpq
        q3SgTTbRuHmCwuDYaKRywHlJSqNGjZo3b96xY8fTTz998ODBw4cPHzly5DXXXDN69GhHdN9xxx3/nuDu
        u++eNm3aww8/fPnll+vco0eP3r17DxkyZOjQoeeff76WDh06HHHEEYcddpgB4aCDDtpxxx0JFzBw+tZ/
        YSA0A++DJE3mkPZIUKNGjd13371FixaUBH033HDDvffe+0AeKJ46depdd92F8d8muPPOO13ec889qH/8
        8cefeuqpZ5999oknnnjssceeTqDxwQcf1P/GG28cNWqUcBEi7NG2bdsDDjhAPIkq4SJW0hn8i0HIQ0p8
        AtSHDlAVK5cwUUBVmjRpcuyxx5522mkc9tprr0UuroN9DDref//9Lnk60t2dPHmyI/aj23333afbI488
        gnEGcHz00Ucfeugh7R65/fbbb7755uuuu07oADOwQadOnbzxuOOOa9euXatWrQ488MCddtoppl3KLf75
        UOjacQ5IRzenU6vwPmogeXbp0uWMM87glaSDv6N1ypQpPB2V/HfmzJnPPffck08+iUqNbiEdm46cGvWs
        4pbO6Ob1EQQedGQGtwQHmZIhDM4A4gDkDFLGDATqkksuGTFiBHEjWe3btz/44IPNMLwkXMfMYyH/BCgU
        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
</value>
  </data>
</root>